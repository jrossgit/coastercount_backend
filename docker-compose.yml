version: '3.7'

services:
  db:
    image: postgres:12.6-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $SQL_USER -d $SQL_DATABASE"]
      interval: 10s
      timeout: 30s
      retries: 5
    environment:
      - POSTGRES_USER=$SQL_USER
      - POSTGRES_PASSWORD=$SQL_PASSWORD
      - POSTGRES_DB=$SQL_DATABASE

  web:
    build: ./backend
    command: "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - rabbitmq
    ports:
      - 8000:8000
    environment:
      - ALLOWED_HOSTS=localhost,0.0.0.0
      - DEBUG=1
      - SECRET_KEY=foo
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - RABBITMQ_MGMT_USERNAME=guest
      - RABBITMQ_MGMT_PASSWORD=guest
      - RABBITMQ_MGMT_URL=rabbitmq:15672
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=$SQL_DATABASE
      - SQL_USER=$SQL_USER
      - SQL_PASSWORD=$SQL_PASSWORD
      - SQL_HOST=$SQL_HOST
      - SQL_PORT=5432

  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq-local.Dockerfile
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: "curl -f --user guest:guest http://127.0.0.1:15672/api/healthchecks/node || false"
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
